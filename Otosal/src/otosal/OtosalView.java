/*
 * OtosalView.java
 */

package otosal;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class OtosalView extends FrameView {


    public OtosalView(SingleFrameApplication app) {
        super(app);

        initComponents();


        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = OtosalApp.getApplication().getMainFrame();
            aboutBox = new OtosalAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        OtosalApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        MPacientes = new javax.swing.JMenu();
        MIAPac = new javax.swing.JMenuItem();
        MIHPac = new javax.swing.JMenuItem();
        MISalir = new javax.swing.JMenuItem();
        MAntro = new javax.swing.JMenu();
        MIInfancia = new javax.swing.JMenuItem();
        MIAdolescentes = new javax.swing.JMenuItem();
        MIAdultos = new javax.swing.JMenuItem();
        MIAncianos = new javax.swing.JMenuItem();
        MHisClin = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(OtosalView.class);
        mainPanel.setBackground(resourceMap.getColor("mainPanel.background")); // NOI18N
        mainPanel.setName("mainPanel"); // NOI18N

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
        });
        jToolBar1.add(jLabel1);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(776, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(644, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(OtosalView.class, this);
        MPacientes.setAction(actionMap.get("AltaPac")); // NOI18N
        MPacientes.setBackground(resourceMap.getColor("MPacientes.background")); // NOI18N
        MPacientes.setText(resourceMap.getString("MPacientes.text")); // NOI18N
        MPacientes.setName("MPacientes"); // NOI18N

        MIAPac.setAction(actionMap.get("AltaPac")); // NOI18N
        MIAPac.setText(resourceMap.getString("MIAPac.text")); // NOI18N
        MIAPac.setName("MIAPac"); // NOI18N
        MPacientes.add(MIAPac);

        MIHPac.setAction(actionMap.get("HistoPaci")); // NOI18N
        MIHPac.setText(resourceMap.getString("MIHPac.text")); // NOI18N
        MIHPac.setName("MIHPac"); // NOI18N
        MPacientes.add(MIHPac);

        MISalir.setAction(actionMap.get("quit")); // NOI18N
        MISalir.setText(resourceMap.getString("MISalir.text")); // NOI18N
        MISalir.setName("MISalir"); // NOI18N
        MPacientes.add(MISalir);

        menuBar.add(MPacientes);

        MAntro.setText(resourceMap.getString("MAntro.text")); // NOI18N
        MAntro.setName("MAntro"); // NOI18N

        MIInfancia.setAction(actionMap.get("MInfancia")); // NOI18N
        MIInfancia.setText(resourceMap.getString("MIInfancia.text")); // NOI18N
        MIInfancia.setName("MIInfancia"); // NOI18N
        MAntro.add(MIInfancia);

        MIAdolescentes.setAction(actionMap.get("MIInfanAdoles")); // NOI18N
        MIAdolescentes.setText(resourceMap.getString("MIAdolescentes.text")); // NOI18N
        MIAdolescentes.setName("MIAdolescentes"); // NOI18N
        MAntro.add(MIAdolescentes);

        MIAdultos.setText(resourceMap.getString("MIAdultos.text")); // NOI18N
        MIAdultos.setName("MIAdultos"); // NOI18N
        MAntro.add(MIAdultos);

        MIAncianos.setText(resourceMap.getString("MIAncianos.text")); // NOI18N
        MIAncianos.setName("MIAncianos"); // NOI18N
        MAntro.add(MIAncianos);

        menuBar.add(MAntro);

        MHisClin.setText(resourceMap.getString("MHisClin.text")); // NOI18N
        MHisClin.setName("MHisClin"); // NOI18N

        jMenuItem12.setAction(actionMap.get("MIAntClinicos")); // NOI18N
        jMenuItem12.setText(resourceMap.getString("AntClinicos.text")); // NOI18N
        jMenuItem12.setName("AntClinicos"); // NOI18N
        MHisClin.add(jMenuItem12);

        menuBar.add(MHisClin);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N
        menuBar.add(jMenu2);

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N
        menuBar.add(jMenu1);

        jMenu3.setText(resourceMap.getString("jMenu3.text")); // NOI18N
        jMenu3.setName("jMenu3"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText(resourceMap.getString("jMenuItem3.text")); // NOI18N
        jMenuItem3.setName("jMenuItem3"); // NOI18N
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText(resourceMap.getString("jMenuItem4.text")); // NOI18N
        jMenuItem4.setName("jMenuItem4"); // NOI18N
        jMenu3.add(jMenuItem4);

        jMenuItem6.setText(resourceMap.getString("jMenuItem6.text")); // NOI18N
        jMenuItem6.setName("jMenuItem6"); // NOI18N
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText(resourceMap.getString("jMenuItem7.text")); // NOI18N
        jMenuItem7.setName("jMenuItem7"); // NOI18N
        jMenu3.add(jMenuItem7);

        menuBar.add(jMenu3);

        jMenu4.setText(resourceMap.getString("jMenu4.text")); // NOI18N
        jMenu4.setName("jMenu4"); // NOI18N

        jMenuItem8.setText(resourceMap.getString("jMenuItem8.text")); // NOI18N
        jMenuItem8.setName("jMenuItem8"); // NOI18N
        jMenu4.add(jMenuItem8);

        menuBar.add(jMenu4);

        jMenu5.setText(resourceMap.getString("jMenu5.text")); // NOI18N
        jMenu5.setName("jMenu5"); // NOI18N

        jMenuItem9.setText(resourceMap.getString("jMenuItem9.text")); // NOI18N
        jMenuItem9.setName("jMenuItem9"); // NOI18N
        jMenu5.add(jMenuItem9);

        jMenuItem10.setText(resourceMap.getString("jMenuItem10.text")); // NOI18N
        jMenuItem10.setName("jMenuItem10"); // NOI18N
        jMenu5.add(jMenuItem10);

        jMenuItem11.setText(resourceMap.getString("jMenuItem11.text")); // NOI18N
        jMenuItem11.setName("jMenuItem11"); // NOI18N
        jMenu5.add(jMenuItem11);

        menuBar.add(jMenu5);

        jMenu6.setText(resourceMap.getString("jMenu6.text")); // NOI18N
        jMenu6.setName("jMenu6"); // NOI18N
        menuBar.add(jMenu6);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        jMenuItem5.setText(resourceMap.getString("jMenuItem5.text")); // NOI18N
        jMenuItem5.setName("jMenuItem5"); // NOI18N
        helpMenu.add(jMenuItem5);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 1085, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 915, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        AltaPac();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
    }//GEN-LAST:event_jLabel1MouseEntered

    @Action
    public void AltaPac() {
        aPaciente=null;
        if (aPaciente == null) {
            JFrame mainFrame = OtosalApp.getApplication().getMainFrame();
            aPaciente = new APacientes(mainFrame, true);
            aPaciente.setLocationRelativeTo(mainFrame);
        } 
        OtosalApp.getApplication().show(aPaciente);
    }

    @Action
    public void HistoPaci() {
        hPaciente=null;
        if (hPaciente == null) {
            JFrame mainFrame = OtosalApp.getApplication().getMainFrame();
            hPaciente = new HPacientes(mainFrame, true);
            hPaciente.setLocationRelativeTo(mainFrame);
        }
        OtosalApp.getApplication().show(hPaciente);
    }

    @Action
    public void MInfancia() {
        String ControladorJDBC = "org.sqlite.JDBC";
         String baseDatos = "jdbc:sqlite:Otosal.sqlite";
         Connection conexion;
         Statement instruccion;
         try{
            Class.forName(ControladorJDBC);
            conexion = DriverManager.getConnection(baseDatos);
            instruccion = conexion.createStatement();
            System.out.println("Base de datos cargada");
            ResultSet rs = instruccion.executeQuery("Select FechNac from TempPaci");
            rs.next();
            if ( !rs.isClosed() ) {
                if (calcularMeses(rs.getString(1)) < 24 ) {
                    AInfan=null;
                    if (AInfan == null) {
                        JFrame mainFrame = OtosalApp.getApplication().getMainFrame();
                        AInfan = new AntroInfan(mainFrame, true);
                        AInfan.setLocationRelativeTo(mainFrame);
                    }
                    OtosalApp.getApplication().show(AInfan);
                } else {
                    JOptionPane.showMessageDialog(null, "El paciente seleccionado no corresponde con este rango de edades",
                        "Otoño Salud", JOptionPane.ERROR_MESSAGE);
                }
                rs.close();
            } else {
                 JOptionPane.showMessageDialog(null, "No hay ningún paciente seleccionado",
                        "Otoño Salud", JOptionPane.ERROR_MESSAGE);
            }
            instruccion.close();
         }catch(Exception e) {}
    }

public static int calcularMeses (String fecha) throws ParseException {
    String datetext = fecha;
    Calendar birth = new GregorianCalendar();
    Calendar today = new GregorianCalendar();
    int meses = 0;
    Date birthDate = new SimpleDateFormat("dd/MM/yyyy").parse(datetext);
    Date currentDate = new Date(); //current date
    birth.setTime(birthDate);
    today.setTime(currentDate);
    meses = (today.get(Calendar.YEAR) - birth.get(Calendar.YEAR) ) *12;
    meses = meses + (today.get(Calendar.MONTH) - birth.get(Calendar.MONTH));
    return meses;
}

    @Action
    public void MIInfanAdoles() {
         AInfanAdoles=null;
                    if (AInfanAdoles == null) {
                        JFrame mainFrame = OtosalApp.getApplication().getMainFrame();
                        AInfanAdoles = new AntroAdoles(mainFrame, true);
                        AInfanAdoles.setLocationRelativeTo(mainFrame);
                    }
                    OtosalApp.getApplication().show(AInfanAdoles);
    }
     @Action
    public void MIAntClinicos() {
         AInfanAdoles=null;
                    if (AInfanAdoles == null) {
                        JFrame mainFrame = OtosalApp.getApplication().getMainFrame();
                        AInfanAdoles = new AntClinicos(mainFrame, true);
                        AInfanAdoles.setLocationRelativeTo(mainFrame);
                    }
                    OtosalApp.getApplication().show(AInfanAdoles);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MAntro;
    private javax.swing.JMenu MHisClin;
    private javax.swing.JMenuItem MIAPac;
    private javax.swing.JMenuItem MIAdolescentes;
    private javax.swing.JMenuItem MIAdultos;
    private javax.swing.JMenuItem MIAncianos;
    private javax.swing.JMenuItem MIHPac;
    private javax.swing.JMenuItem MIInfancia;
    private javax.swing.JMenuItem MISalir;
    private javax.swing.JMenu MPacientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
    private JDialog aPaciente;
    private JDialog hPaciente;
    private JDialog AInfan;
    private JDialog AInfanAdoles;
}
